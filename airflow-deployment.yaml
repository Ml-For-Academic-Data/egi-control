apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: airflow
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: airflow
    spec:
      containers:
        - args:
            - bash
            - -c
            - |-
              airflow db init &&
                        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
                        airflow webserver
          env:
            - name: AIRFLOW__CORE__EXECUTOR
              value: SequentialExecutor
            - name: AIRFLOW__CORE__FERNET__KEY
              value: D_b7-k2tJcEmrfAPASL8V_cY03LJd-uWWtJ-8HN1Esk=
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "false"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: sqlite:////opt/airflow/airflow.db
            - name: _AIRFLOW_WWW_USER_CREATE
              value: "true"
            - name: _AIRFLOW_WWW_USER_PASSWORD
              value: admin
            - name: _AIRFLOW_WWW_USER_USERNAME
              value: admin
          image: airflow-w-sklearn
          name: airflow
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/airflow/dags
              name: airflow-cm0
            - mountPath: /opt/airflow
              name: airflow-claim3
      restartPolicy: Always
      volumes:
        - configMap:
            name: airflow-cm0
          name: airflow-cm0
        - name: airflow-claim3
          persistentVolumeClaim:
            claimName: airflow-claim3
